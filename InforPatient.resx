<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_history_list_NKC.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABD5JREFUaEPt
        mGtMHFUUx+dLPxiTpl8wwbYhfqgpiU1ME23TxEhB6kKwWrLElBDStFRKSmowaYNVAzVqrLGCEdBs2W7b
        3W0boO4WSqMpClEepUApFWGQwD54WUD2wSMKxeOcYe51dlmWgdm7aZP9J7+we5l7zvnv3HvmwUUUUUQR
        BZTWCnu0FogLN1L60CnVAhMCEG7SbkGUVEJoJASNGFFDxMhKEoJSIxm1i1DCT4Ou3wu59fM06eEfH8HH
        7XOqwBgkHsLUyOnmWTA5PSJn77lp0mO1E3R8vWAMEg9hauRIlY0mzrX00aRZ1lHQ8eOqyLKO0HgIUyOv
        fzcICQXfQ/JnNbD3yw6aVHPeCS/lmVWh0TloPISpkbcq50UziSW8+JmOVy3AG2aPKjAGiYcwNRJOmBvB
        znX4B98OwwKmRrDlks1+qulvmvT4z/OgH/CoAmOQeAhTI/m/uqmRz9snadJ3qsfo+HrJrh6l8RCmRt7U
        9UBRxxCUdY9B5qX7NGn6tWE4Wd2lCoxB4iFMjSQbHtJ2iZ2Ljl8Ygz0f1qoCY5B4CPPNjm13/9UZn6Qs
        YG4kXDA38nb1v2ILlo+xgKmR7LoF2mXk7TfnpwUo65tWBcYg8RCmRt5v9FIjT3T7TTP0iq1X3z/p034z
        KkagoK5XFRkVYWy/SeeHArbfpPJh2HXquiowBomHMN/s2HpTTC6fpCxgbiRcPFFGPnr3OJTHcWsjnkuT
        SlubhIQRI6uR+EUTaPLL4URxmSKinuYOCSVtXqosiIxD03FGu6vhQt9YC/41Od31Brt30TDoAQJevIp+
        n1k3eFElRlKMU5BuHoDilm5FCCVuFXhKLDaYjE63UHzgC1YowPdh8jOC4NMm/q+BN8Ofba8ExDL4AEwO
        t10qM7gsLtjknzjUfHDn/9saOaX8NFTYHTDVugOgkfNhoDNdnGt0eAqlUoMLl5V/4lAjX1Zy8KwYbEvH
        NPeUQW9XDnT9lg+3/7gpzXXfxx9aKjW4vr7La+RJWbCSEQTN4NLzn4PLXbEJ1JmahgP+QUJNMCMIvtwo
        7pkRm4rJ6R0R5twwD8+8KJWoTCnZJ7b5Jw41K+0R5NPOOXpczUArXLMP0+9mpxfbrmI9800b30MmsyBQ
        10LQIDnGOtgFsy3RYre66nhIx3EPS3WurtT3TheQiazI++WfZUbIRr9u48F75znasYY6NGB2/EXmWqUy
        FWl3TrHuW5KUBbj+5W8qyVNnpc0GrtZYn9aL2O5pBTMu8RipRkXaIKDNLDx7Ts+PjssLCCVoBh+V8fkf
        jeASmry7c5kJArZjnLdUonJhq9MKHNzyfGzWMf3NyvSvKi6z4MyhxM7S5Cj3laPboPZkTFAuZm7Hm8Zu
        fTy3T6xSofDM7BBIYMknL3PWZXe3q7Heu1+WStzK7Xs1mstbC6/FcLHS9MdKzwq8sEY2CkT0mInj/gMq
        hDL3oaGk1wAAAABJRU5ErkJggg==
</value>
  </data>
</root>